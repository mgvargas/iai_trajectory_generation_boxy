<?xml version="1.0"?>
<launch>

    <!-- Parameters -->
    <arg name="debug" default="false" />
    <arg name="sim" default="true" />
    <arg name="rviz" default="true" />
    <arg name="naive" default="true" />
    <arg name="urdf-name" default="boxy_description.urdf.xacro"/>
    <arg name="urdf-path" default="$(find iai_boxy_description)/robots/$(arg urdf-name)"/>
    <arg name="param-name" default="robot_description"/>

    <param name="$(arg param-name)" command="xacro --inorder '$(arg urdf-path)'" />

    <arg name="camera_frame_id" default="camera_optical_frame" />

    <!-- Run Rviz and load the default config to see the active objects -->
    <group if="$(arg rviz)" >
      <include file="$(find iai_markers_tracking)/launch/markers_rviz.launch">
        <arg name="config" value="true"/>
        <arg name="debug" value="$(arg debug)"/>
      </include>
     </group>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <!-- Testing (publishes markers in tf), start boxy simulation -->
    <!--include file="$(find iai_boxy_description)/launch/upload_boxy.launch" /-->
    <group if="$(arg sim)">
        <node name="object_poses" pkg="iai_markers_tracking" type="simulate_obj_detection.py"
              respawn="false" output="screen"/>
        <group if="$(arg naive)">
            <include file="$(find iai_trajectory_generation_boxy)/launch/naive_kinem_sim.launch"/>
        </group>
    </group>

    <node pkg="tf2_ros" type="buffer_server" name="tf2_buffer_server" />

    <node pkg="tf2_ros" type="static_transform_publisher" name="fake_localization"
        output="screen" args="0 0 0 0 0 0 map odom" />

    <!-- Object detection and database -->
    <node name="obj_database" pkg="iai_markers_tracking" type="object_db_reader.py"
          respawn="false" output="screen"/>

    <group unless="$(arg sim)">
        <include file="$(find video_stream_opencv)/launch/camera.launch">
          <arg name="frame_id" value="$(arg camera_frame_id)"/>
        </include>
        <include file="$(find ros_markers)/launch/detect.launch">
          <arg name="omit_other_tags" value="false"/>
          <arg name="default_marker_size" value="28.5" />
          <arg name="image_topic" value="camera/image_raw"/>
        </include>
    </group>

    <!-- Simulate robot trajectory -->
    <node name="sim_motion_controller" pkg="iai_trajectory_generation_boxy" type="sim_controller.py"
          respawn="false" output="screen"/>
    <node name="trajectory_evaluation" pkg="iai_trajectory_generation_boxy" type="trajectory_evaluation.py"
          respawn="false" output="screen"/>

    <!-- Boxy simulation>
    <group if="$(arg sim)">
        <include file="$(find iai_boxy_sim)/launch/boxy.launch"/>
    </group-->

</launch>
